import com.badlogic.gdx.tools.texturepacker.TexturePacker

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
eclipse.project.name = appName + '-core'

java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17

dependencies {
    api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
    api "com.badlogicgames.gdx:gdx:$gdxVersion"
    api "com.github.tommyettinger:anim8-gdx:$anim8Version"
    api "com.github.tommyettinger:colorful:$colorfulVersion"
    api "com.github.tommyettinger:digital:$digitalVersion"
    api "games.rednblack.miniaudio:miniaudio:$miniaudioVersion"
    api "org.apache.fury:fury-core:$furyVersion"
    api "space.earlygrey:shapedrawer:$shapeDrawerVersion"
    api "net.onedaybeard.artemis:artemis-odb:$artemisOdbVersion"
    api "net.onedaybeard.artemis:artemis-odb-serializer:$artemisOdbVersion"
    api "net.onedaybeard.artemis:artemis-odb-serializer-json-libgdx:$artemisOdbVersion"

    if (enableGraalNative == 'true') {
        implementation "io.github.berstanio:gdx-svmhelper-annotations:$graalHelperVersion"
    }
}

project.ext.texturePacker = [ "assets-raw/", "assets/", "PaintTDAssets" ]

tasks.register("texturePacker"){
    inputs.dir("${project.rootDir}/assets-raw/")
    outputs.dir("${project.rootDir}/assets/")

    doLast {
        if (project.ext.has('texturePacker')) {
            logger.info "Calling TexturePacker: "+project.ext.texturePacker
            TexturePacker.process(texturePacker[0], texturePacker[1], texturePacker[2])
        }
    }
}

processResources.dependsOn "texturePacker"